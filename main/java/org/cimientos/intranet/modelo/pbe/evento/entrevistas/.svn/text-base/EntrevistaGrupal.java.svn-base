package org.cimientos.intranet.modelo.pbe.evento.entrevistas;

import java.util.List;

import javax.persistence.Column;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;

import org.cimientos.intranet.modelo.ubicacion.ZonaCimientos;

@Entity
@DiscriminatorValue("grupal")
public class EntrevistaGrupal extends Entrevista {
	
	@OneToOne
	private ZonaCimientos zonaCimientos;
	
	@OneToMany
	@JoinColumn(name="entrevistaGrupal_id")
	private List<EntrevistaIndividual> entrevistasIndividuales;
	
	@Column(length=10000)
	private String objetivoEncuentro;
	
	@Column(length=10000)
	private String temasDesarrollados;
	
	
	

	public ZonaCimientos getZonaCimientos() {
		return zonaCimientos;
	}

	public void setZonaCimientos(ZonaCimientos zonaCimientos) {
		this.zonaCimientos = zonaCimientos;
	}



	public String getObjetivoEncuentro() {
		return objetivoEncuentro;
	}

	public void setObjetivoEncuentro(String objetivoEncuentro) {
		this.objetivoEncuentro = objetivoEncuentro;
	}

	public String getTemasDesarrollados() {
		return temasDesarrollados;
	}

	public void setTemasDesarrollados(String temasDesarrollados) {
		this.temasDesarrollados = temasDesarrollados;
	}

	/**
	 * @return the entrevistasIndividuales
	 */
	public List<EntrevistaIndividual> getEntrevistasIndividuales() {
		return entrevistasIndividuales;
	}

	/**
	 * @param entrevistasIndividuales the entrevistasIndividuales to set
	 */
	public void setEntrevistasIndividuales(
			List<EntrevistaIndividual> entrevistasIndividuales) {
		this.entrevistasIndividuales = entrevistasIndividuales;
	}

	@Override
	public boolean esFinal() {
		return false;
	}
	
	public String getPeriodo(){	
		if(!getEntrevistasIndividuales().isEmpty())
			return getEntrevistasIndividuales().get(0).getPeriodoDePago().getNombre();
		else
			return null;
	}

}
